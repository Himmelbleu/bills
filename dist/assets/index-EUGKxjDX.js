var l;(i=>{i.RECORD="record",i.TALLY_PAD="tally_pad",i.COMMENTS="comments",i.VIEW_DATE="view_date"})(l||(l={}));var p;(i=>{function w(){const e=new Promise((o,c)=>{const t=indexedDB.open(l.TALLY_PAD);t.onsuccess=function(n){const r=n.target.result;o(r)},t.onerror=function(){c(new Error("创建数据库失败！"))},t.onupgradeneeded=function(n){const r=n.target.result,a=r.createObjectStore(l.RECORD,{keyPath:"id"}),d=r.createObjectStore(l.COMMENTS,{keyPath:"id"}),s=r.createObjectStore(l.VIEW_DATE,{keyPath:"id"});a.add({id:"2024",items:{1:{balance:[],surplus:0,budget:0}}}),d.add({id:"0",items:[{value:"生活费",cost:1800,type:"支"}]}),s.add({id:"0",Y:"2024",M:"1"})}});return e.catch(o=>{console.error(o)}),e}i.create=w;function E(e,o,c,t){const n=new Promise((r,a)=>{const u=e.transaction([o],"readwrite").objectStore(o).add(c,t);u.onsuccess=function(){r(e)},u.onerror=function(){a(new Error("插入数据错误！"))}});return n.catch(r=>{console.error(r)}),n}i.add=E;function P(e,o,c){const t=new Promise((n,r)=>{const s=e.transaction([o],"readwrite").objectStore(o).delete(c);s.onsuccess=function(){n(e)},s.onerror=function(){r(new Error("删除数据错误！"))}});return t.catch(n=>{console.error(n)}),t}i.drop=P;function g(e,o,c,t){const n=new Promise((r,a)=>{const s=e.transaction([o],"readwrite").objectStore(o),u=s.get(t);u.onsuccess=function(m){s.put(c).onsuccess=function(){r(e)}},u.onerror=function(){a(new Error("更新数据错误！"))}});return n.catch(r=>{console.error(r)}),n}i.put=g;function h(e,o,c){const t=new Promise((n,r)=>{const d=e.transaction([o],"readwrite").objectStore(o);if(c){const s=d.get(c);s.onsuccess=function(){const u=s.result;n(u||null)},s.onerror=function(){r(null)}}else{const s=d.openCursor(),u=[];s.onsuccess=function(m){const f=m.target.result;f&&(u.push(f.value),f.continue()),n(u)},s.onerror=function(){r(null)}}});return t.catch(n=>{console.error(n)}),t}i.get=h;function S(e,o){const c=new Promise((t,n)=>{const a=e.transaction([o],"readonly").objectStore(o).getAllKeys();a.onsuccess=function(d){t(d.target.result)},a.onerror=function(){n(null)}});return c.catch(t=>{console.error(t)}),c}i.keys=S;function q(e){const o=new Promise((c,t)=>{const n=indexedDB.deleteDatabase(e);n.onsuccess=function(){c(null)},n.onerror=function(){t(null)},n.onblocked=function(){t(null)}});return o.catch(c=>{console.error(c)}),o}i.del=q})(p||(p={}));export{l as C,p as D};
